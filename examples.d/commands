#!/usr/bin/env bash
# Title:         valet.d/commands
# Description:   This script is auto-generated by the 'build' script
#                It contains metadata on each commands
# Author:        github.com/jcaillon
# shellcheck disable=SC2034

_CMD_INCLUDED=1

# /!\ This file is auto-generated by the 'self-build' script. Do not edit it manually



# list all the functions callable with a command
CMD_ALL_FUNCTIONS="build
helloWorld
selfMenu
selfTestCommands
selfTestCore
showCommandHelp
showcaseMenu
showcase_command1
this
"


# Get the function name from a command
CMD_FUNCTION_NAME_self_build="build"
CMD_FUNCTION_NAME_showcase_hello_world="helloWorld"
CMD_FUNCTION_NAME_self="selfMenu"
CMD_FUNCTION_NAME_self_test_commands="selfTestCommands"
CMD_FUNCTION_NAME_self_test_core="selfTestCore"
CMD_FUNCTION_NAME_help="showCommandHelp"
CMD_FUNCTION_NAME_showcase="showcaseMenu"
CMD_FUNCTION_NAME_showcase_command1="showcase_command1"
CMD_FUNCTION_NAME_="this"


# get the maximum number of sub command levels; e.g. 'command subcommand subsubcommand' has 2 levels
CMD_MAX_SUB_COMMAND_LEVEL="1"


# list all the commands
CMD_ALL_COMMANDS="

help
self
self build
self test-commands
self test-core
showcase
showcase command1
showcase hello-world
"


# get the maximum width (nb characters) among all commands
CMD_MAX_COMMAND_WIDTH="20"


# Get the input for fzf to display the header commands menu
CMD_COMMANDS_MENU_HEADER="Please select the command to run (filter by typing anything)

Command name          	Short description"
CMD_COMMANDS_MENU_BODY="help                  	Show the help this program or of a specific command
self build            	Re-build the menu of valet from your commands.
self                  	Show the valet self-maintenance sub menu.
self test-commands    	Test valet built-in and custom commands.
self test-core        	Test valet core features.
showcase command1     	A showcase command that uses arguments and options.
showcase hello-world  	A very dumb command
showcase              	Show the showcase sub menu."


# ====================
# Variables to describe each function
# ====================
# Get the properties of a given function xxx.
# CMD_COMMAND_xxx = the command of the function
# CMD_FILETOSOURCE_xxx = the file to source for the function
# CMD_SUDO_xxx = true if the function requires sudo
# CMD_SHORTDESCRIPTION_xxx = the short description of the function
# CMD_DESCRIPTION_xxx = the description of the function
# CMD_EXAMPLES_NAME_xxx = array with each example name
# CMD_EXAMPLES_DESCRIPTION_xxx = array with each example description
# CMD_OPTIONS_NAME_xxx = array with each option name
# CMD_OPTIONS_DESCRIPTION_xxx = array with each option description
# CMD_ARGUMENTS_NAME_xxx = array with each argument name
# CMD_ARGUMENTS_DESCRIPTION_xxx = array with each argument description
# CMD_COMMANDS_NAME_xxx = array with each sub command name
# CMD_COMMANDS_SHORTDESCRIPTION_xxx = array with each sub commmand short description
CMD_COMMAND_build="self build"
CMD_COMMAND_helloWorld="showcase hello-world"
CMD_COMMAND_selfMenu="self"
CMD_COMMAND_selfTestCommands="self test-commands"
CMD_COMMAND_selfTestCore="self test-core"
CMD_COMMAND_showCommandHelp="help"
CMD_COMMAND_showcaseMenu="showcase"
CMD_COMMAND_showcase_command1="showcase command1"
CMD_FILETOSOURCE_build="valet.d/commands.d/self-build"
CMD_FILETOSOURCE_helloWorld="examples.d/showcase.sh"
CMD_FILETOSOURCE_selfMenu="valet.d/commands.d/self.sh"
CMD_FILETOSOURCE_selfTestCommands="valet.d/commands.d/self-test.sh"
CMD_FILETOSOURCE_selfTestCore="valet.d/commands.d/self-test.sh"
CMD_FILETOSOURCE_showcaseMenu="examples.d/showcase.sh"
CMD_FILETOSOURCE_showcase_command1="examples.d/showcase.sh"
CMD_SUDO_showcase_command1="true"
CMD_SHORTDESCRIPTION_build="Re-build the menu of valet from your commands."
CMD_SHORTDESCRIPTION_helloWorld="A very dumb command"
CMD_SHORTDESCRIPTION_selfMenu="Show the valet self-maintenance sub menu."
CMD_SHORTDESCRIPTION_selfTestCommands="Test valet built-in and custom commands."
CMD_SHORTDESCRIPTION_selfTestCore="Test valet core features."
CMD_SHORTDESCRIPTION_showCommandHelp="Show the help this program or of a specific command"
CMD_SHORTDESCRIPTION_showcaseMenu="Show the showcase sub menu."
CMD_SHORTDESCRIPTION_showcase_command1="A showcase command that uses arguments and options."
CMD_SHORTDESCRIPTION_this="Your personal assistant in the terminal!"
CMD_DESCRIPTION_build="This command can be used to re-build the menu in case you have modified, added or removed an about_xxx function in your command scripts.

Please read the ⌜README.md⌝ to learn how to create and modified your commands."
CMD_DESCRIPTION_helloWorld="A dumb command."
CMD_DESCRIPTION_selfMenu="Show the valet self-maintenance sub menu.

This is a sub command that regroups commands useful to maintain valet."
CMD_DESCRIPTION_selfTestCommands="Test valet built-in and custom commands using approval tests approach."
CMD_DESCRIPTION_selfTestCore="Test valet core features using approval tests approach."
CMD_DESCRIPTION_showCommandHelp="Show the help this program or of the help of a specific command.

You can show the help with or without colors and set the maximum columns for the help text."
CMD_DESCRIPTION_showcaseMenu="Can be used to show the showcase sub menu in interactive mode.

Note: interactive mode requires fzf to be installed."
CMD_DESCRIPTION_showcase_command1="An example of description.

You can put any text here, it will be wrapped to fit the terminal width.

You can ⌜highlight⌝ some text as well."
CMD_DESCRIPTION_this="Valet is wrapper around a collection of commands that help you with your daily tasks.

You can call valet without any commands to start an interactive session.

⌜Exit codes:⌝
- 0: everything went well
- 1: an error occured

⌜Create your own commands:⌝
You can create your own commands and have them available in valet, please check the README.md or the examples under examples.d to do so.
Valet looks for commands in the valet user directory, which default to ~/.valet.d and can be overwritten using the environment variable VALET_USER_DIRECTORY=\"my/path\".
Once you have created your new command script, run the ⌜valet self build⌝ command to update the valet menu.

⌜Configuration through environment variables:⌝
In addition to the environment variables defined for each options, you can define the following environment variables to configure valet:
- VALET_NO_COLOR=\"true\": will disable the color output for logs and help.
- VALET_NO_WRAP=\"true\": will disable the text wrapping for logs and help.
- VALET_NO_ICON=\"true\": will disable the icons for logs and help.
- VALET_NO_TIMESTAMP=\"true\": will disable the timestamp for logs.
- VALET_CI_MODE=\"true\": will simplify the log output for CI/CD environments (or slow systems), will display the logs without colors, without wrapping lines and with the full date.

⌜Developer notes:⌝
Please check the README.md to learn how to implement a new command.
You can enable debug mode with profiling for valet by setting the environment variable VALET_STARTUP_PROFILING to true (it will output to ~/profile_valet.txt)."
CMD_EXAMPLES_NAME_selfMenu=(
  "self build"
)
CMD_EXAMPLES_DESCRIPTION_selfMenu=(
  "Re-build the valet menu by calling the ⌜build⌝ sub command."
)
CMD_EXAMPLES_NAME_showCommandHelp=(
  "help ⌟cmd⌞"
  "help ⌟cmd⌞ ⌟subCmd⌞"
  "help --no-colors --columns 50"
)
CMD_EXAMPLES_DESCRIPTION_showCommandHelp=(
  "Shows the help for the command ⌜cmd⌝"
  "Shows the help for the sub command ⌜subCmd⌝ of the command ⌜cmd⌝"
  "Shows the help for the program without any color and with a maximum of 50 columns"
)
CMD_EXAMPLES_NAME_showcaseMenu=(
  "showcase command1"
)
CMD_EXAMPLES_DESCRIPTION_showcaseMenu=(
  "Run the ⌜command1⌝ showcase command."
)
CMD_EXAMPLES_NAME_showcase_command1=(
  "showcase command1 -o -2 value1 arg1 more1 more2"
)
CMD_EXAMPLES_DESCRIPTION_showcase_command1=(
  "Call command1 with option1, option2 and some arguments."
)
CMD_EXAMPLES_NAME_this=(
  "--help"
  "-v a-command and-sub-command"
)
CMD_EXAMPLES_DESCRIPTION_this=(
  "Displays this help text."
  "Active ⌜verbose⌝ mode and run the command ⌜a-command⌝ with the sub command ⌜and-sub-command⌝."
)
CMD_OPTIONS_NAME_build=(
  "-d, --user-directory <path>"
  "-h, --help"
)
CMD_OPTIONS_DESCRIPTION_build=(
  "Specify the directory in which to look for your command scripts.

This defaults to ⌜~/.valet.d⌝ or the path defined in the environment variable VALET_USER_DIRECTORY=\"my/path\".
This option can be set by exporting the variable VALET_USER_DIRECTORY=\"<path>\"."
  "Display the help for this command"
)
CMD_OPTIONS_NAME_helloWorld=(
  "-h, --help"
)
CMD_OPTIONS_DESCRIPTION_helloWorld=(
  "Display the help for this command"
)
CMD_OPTIONS_NAME_selfMenu=(
  "-h, --help"
)
CMD_OPTIONS_DESCRIPTION_selfMenu=(
  "Display the help for this command"
)
CMD_OPTIONS_NAME_selfTestCommands=(
  "-h, --help"
)
CMD_OPTIONS_DESCRIPTION_selfTestCommands=(
  "Display the help for this command"
)
CMD_OPTIONS_NAME_selfTestCore=(
  "-h, --help"
)
CMD_OPTIONS_DESCRIPTION_selfTestCore=(
  "Display the help for this command"
)
CMD_OPTIONS_NAME_showCommandHelp=(
  "-nc, --no-colors"
  "-c, --columns <number>"
  "-h, --help"
)
CMD_OPTIONS_DESCRIPTION_showCommandHelp=(
  "Do not use any colors in the output
This option can be set by exporting the variable VALET_NO_COLORS=\"true\"."
  "Set the maximum columns for the help text
This option can be set by exporting the variable VALET_COLUMNS=\"<number>\"."
  "Display the help for this command"
)
CMD_OPTIONS_NAME_showcaseMenu=(
  "-h, --help"
)
CMD_OPTIONS_DESCRIPTION_showcaseMenu=(
  "Display the help for this command"
)
CMD_OPTIONS_NAME_showcase_command1=(
  "-o, --option1"
  "-o2, -2, --this-is-option2 <level>"
  "-h, --help"
)
CMD_OPTIONS_DESCRIPTION_showcase_command1=(
  "First option.
This option can be set by exporting the variable VALET_OPTION1=\"true\"."
  "An option with a value.
This option can be set by exporting the variable VALET_THIS_IS_OPTION2=\"<level>\"."
  "Display the help for this command"
)
CMD_OPTIONS_NAME_this=(
  "-x, --profiling"
  "-ll, -log, --log-level <level>"
  "-v, --verbose"
  "--version"
  "-h, --help"
)
CMD_OPTIONS_DESCRIPTION_this=(
  "Turn on profiling (with debug mode) before running the required command.
It will output to ~/profile_valet_cmd.txt.
This is useful to debug your command and understand what takes a long time to execute.
This option can be set by exporting the variable VALET_PROFILING=\"true\"."
  "Set the log level of valet (defaults to info).
Possible values are: debug, info, warn, error, fatal.
This option can be set by exporting the variable VALET_LOG_LEVEL=\"<level>\"."
  "Output verbose information.
This is the equivalent of setting the log level to debug.
This option can be set by exporting the variable VALET_VERBOSE=\"true\"."
  "Display the current version of valet.
This option can be set by exporting the variable VALET_VERSION=\"true\"."
  "Display the help for this command"
)
CMD_ARGUMENTS_NAME_selfMenu=(
  "commands..."
)
CMD_ARGUMENTS_DESCRIPTION_selfMenu=(
  "The command to execute.

See the commands section for more information."
)
CMD_ARGUMENTS_NAME_selfTestCommands=(
  "testsDirectory"
)
CMD_ARGUMENTS_DESCRIPTION_selfTestCommands=(
  "The path to the directory containing the tests.

See ⌜examples.d/tests.d⌝ for the built-in command tests."
)
CMD_ARGUMENTS_NAME_selfTestCore=(
  "testsDirectory"
)
CMD_ARGUMENTS_DESCRIPTION_selfTestCore=(
  "The path to the directory containing the tests.

See ⌜tests.d⌝ for the internal tests."
)
CMD_ARGUMENTS_NAME_showCommandHelp=(
  "commands..."
)
CMD_ARGUMENTS_DESCRIPTION_showCommandHelp=(
  "The name of the command to show the help for.
If not provided, show the help for the program."
)
CMD_ARGUMENTS_NAME_showcaseMenu=(
  "commands..."
)
CMD_ARGUMENTS_DESCRIPTION_showcaseMenu=(
  "The command to execute.

See the commands section for more information."
)
CMD_ARGUMENTS_NAME_showcase_command1=(
  "firstArg"
  "more..."
)
CMD_ARGUMENTS_DESCRIPTION_showcase_command1=(
  "First argument."
  "Will be an an array of strings."
)
CMD_ARGUMENTS_NAME_this=(
  "commands..."
)
CMD_ARGUMENTS_DESCRIPTION_this=(
  "The command or sub commands to execute.
See the commands section for more information."
)
CMD_COMMANDS_NAME_selfMenu=(
  "build"
  "test-commands"
  "test-core"
)
CMD_COMMANDS_DESCRIPTION_selfMenu=(
  "Re-build the menu of valet from your commands."
  "Test valet built-in and custom commands."
  "Test valet core features."
)
CMD_COMMANDS_NAME_showcaseMenu=(
  "hello-world"
  "command1"
)
CMD_COMMANDS_DESCRIPTION_showcaseMenu=(
  "A very dumb command"
  "A showcase command that uses arguments and options."
)
CMD_COMMANDS_NAME_this=(
  "self build"
  "showcase hello-world"
  "self"
  "self test-commands"
  "self test-core"
  "help"
  "showcase"
  "showcase command1"
)
CMD_COMMANDS_DESCRIPTION_this=(
  "Re-build the menu of valet from your commands."
  "A very dumb command"
  "Show the valet self-maintenance sub menu."
  "Test valet built-in and custom commands."
  "Test valet core features."
  "Show the help this program or of a specific command"
  "Show the showcase sub menu."
  "A showcase command that uses arguments and options."
)


# ====================
# Variables used during parsing
# ====================
# Get the options of a given function xxx.
# CMD_OPTS_xxx = array with each option separated by a space
# CMD_OPTS_HAS_VALUE_xxx = array which indicates for each option if it has a value or not
# CMD_OPTS_NAME_xxx = array with each option names in camel case
# CMD_OPTS_NAME_SC_xxx = array with each option names in snake case
CMD_OPTS_build=(
  "-d --user-directory"
  "-h --help"
)
CMD_OPTS_HAS_VALUE_build=(
  "true"
)
CMD_OPTS_NAME_build=(
  "userDirectory"
  "help"
)
CMD_OPTS_NAME_SC_build=(
  "USER_DIRECTORY"
)
CMD_OPTS_showCommandHelp=(
  "-nc --no-colors"
  "-c --columns"
  "-h --help"
)
CMD_OPTS_HAS_VALUE_showCommandHelp=(
  "false"
  "true"
)
CMD_OPTS_NAME_showCommandHelp=(
  "noColors"
  "columns"
  "help"
)
CMD_OPTS_NAME_SC_showCommandHelp=(
  "NO_COLORS"
  "COLUMNS"
)
CMD_OPTS_showcase_command1=(
  "-o --option1"
  "-o2 -2 --this-is-option2"
  "-h --help"
)
CMD_OPTS_HAS_VALUE_showcase_command1=(
  "false"
  "true"
)
CMD_OPTS_NAME_showcase_command1=(
  "option1"
  "thisIsOption2"
  "help"
)
CMD_OPTS_NAME_SC_showcase_command1=(
  "OPTION1"
  "THIS_IS_OPTION2"
)


# Get the arguments of a given function xxx.
# CMD_ARGS_NAME_xxx = array with each argument names in camel case
# CMD_ARGS_LAST_IS_ARRAY_xxx = array which indicates if the last argument of the function is an array
CMD_ARGS_NAME_selfMenu=(
  "commands"
)
CMD_ARGS_LAST_IS_ARRAY_selfMenu="true"
CMD_ARGS_NAME_selfTestCommands=(
  "testsDirectory"
)
CMD_ARGS_LAST_IS_ARRAY_selfTestCommands="false"
CMD_ARGS_NAME_selfTestCore=(
  "testsDirectory"
)
CMD_ARGS_LAST_IS_ARRAY_selfTestCore="false"
CMD_ARGS_NAME_showCommandHelp=(
  "commands"
)
CMD_ARGS_LAST_IS_ARRAY_showCommandHelp="true"
CMD_ARGS_NAME_showcaseMenu=(
  "commands"
)
CMD_ARGS_LAST_IS_ARRAY_showcaseMenu="true"
CMD_ARGS_NAME_showcase_command1=(
  "firstArg"
  "more"
)
CMD_ARGS_LAST_IS_ARRAY_showcase_command1="true"
CMD_ARGS_NAME_this=(
  "commands"
)
CMD_ARGS_LAST_IS_ARRAY_this="true"


