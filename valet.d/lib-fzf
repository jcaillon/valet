#!/usr/bin/env bash
set -Eeu -o pipefail
# author: github.com/jcaillon
# description: This script can be sourced by commands to provide convenient functions.

# in CI mode, we do not allow to go interactive because it would make the job hang forever
if [[ ${VALET_CONFIG_ENABLE_CI_MODE:-false} == "true" ]]; then
  core::fail "CI/CD mode is activated, interactive mode has been started but we cannot run fzf or we would make the job hang forever."
fi

#===============================================================
# >>> Fzf glorious functions
#===============================================================

# Open fzf with the given mode, history id, header and body.
#
# $1: the mode to use, can be "menu", "search", "options"
# $2: the history id to use (used in the name of the fzf history file)
# $3: the header to display
# $4: the body to display
# $5+: additional options to pass to fzf
#
# Returns:
#  The choices made by the user in the global variable LAST_RETURNED_VALUE.
#  The first line is the query (can be empty), the next lines are the choices.
#
# Usage:
#  fzf::showFzf "menu" "my-command" "Choose an option" "option1"$'\n'"option2"$'\n'"option3"
function fzf::showFzf() {
  local mode historyId header body
  mode="${1}"
  historyId="${2}"
  header="${3}"
  body="${4}"
  shift 4

  # shellcheck source=lib-io
  source io

  io::getCommandLocalPath "fzf"
  local fzfExecutable="${LAST_RETURNED_VALUE}"

  log::debug "Running fzf from ⌜${fzfExecutable}⌝."

  local -a defaultOptions
  local -a modeOptions

  # get the history file
  core::getLocalStateDirectory && local stateDirectory="${LAST_RETURNED_VALUE}"
  local historyFile
  if [[ -n "${historyId}" ]]; then
    historyFile="${stateDirectory}/fzf-history-${historyId}"
    if [[ ! -f "${historyFile}" ]]; then
      : >"${historyFile}"
    fi
    defaultOptions+=(
      --history="${historyFile}"
      --history-size=50
      --bind "alt-up:prev-history"
      --bind "alt-down:next-history"
    )
  fi

  # compute preview width
  local previewWidth=$((GLOBAL_COLUMNS / 2 - 10))
  if [[ previewWidth -le 15 ]]; then
    previewWidth=15
  fi

  local cDefault cTitle cKeybinding
  if [[ ${VALET_CONFIG_DISABLE_COLORS:-} != true ]]; then
    cDefault=${VALET_CONFIG_COLOR_DEFAULT:-$'\e'"[0m"}
    cTitle=${VALET_CONFIG_COLOR_TITLE:-$'\e'"[0;36m"}
    cKeybinding=${VALET_CONFIG_COLOR_COMMAND:-$'\e'"[0;31m"}
  else
    cDefault=""
    cTitle=""
    cKeybinding=""
  fi

  local headerHelp="${cKeybinding}Press ALT+H to display the help and keybindings.${cDefault}"$'\n'

  local helpPreview
  case "${mode}" in
  "options" | "menu")
    helpPreview="${cTitle}HELP${cDefault}"$'\n'$'\n'"Navigate through the options with the ${cKeybinding}UP${cDefault}/${cKeybinding}DOWN${cDefault} keys."$'\n'$'\n'"Validate your choice with ${cKeybinding}ENTER${cDefault}."
    modeOptions+=(
      --no-multi
    )
    if [[ ${mode} == "options" ]]; then
      modeOptions+=(
        --height=~100%
        --min-height=10
      )
    fi
    ;;
  "multi-options")
    helpPreview="${cTitle}HELP${cDefault}"$'\n'$'\n'"Navigate through the options with the ${cKeybinding}UP${cDefault}/${cKeybinding}DOWN${cDefault} keys."$'\n'$'\n'"Opt-in and out of an option using ${cKeybinding}TAB${cDefault}."$'\n'$'\n'"Validate with ${cKeybinding}ENTER${cDefault}."
    modeOptions+=(
      --multi
      --height=~100%
      --min-height=10
    )
    ;;
  "yes-no")
    helpPreview="${cTitle}HELP${cDefault}"$'\n'$'\n'"Navigate through the options with the ${cKeybinding}UP${cDefault}/${cKeybinding}DOWN${cDefault} keys."$'\n'$'\n'"Validate your choice with ${cKeybinding}ENTER${cDefault}."
    modeOptions+=(
      --height=~100%
      --min-height=10
      --no-multi
      --no-info
      --no-separator
    )
    body="Yes"$'\n'"No"
    headerHelp=""
    helpPreview=""
    ;;
  "query")
    helpPreview="${cTitle}HELP${cDefault}"$'\n'$'\n'"Type your answer in the prompt."$'\n'$'\n'"Validate with ${cKeybinding}ENTER${cDefault}."
    modeOptions+=(
      --height=~100%
    )
    if [[ -z "${body}" ]]; then
      modeOptions+=(
        --no-mouse
        --no-info
        --no-separator
        --no-scrollbar
        --pointer=' '
        --color=pointer:-1
        --color=fg+:-1
        --color=bg+:-1
      )
      headerHelp=""
      helpPreview=""
    else
      modeOptions+=(
        --bind "tab:replace-query"
        --min-height=10
      )
      headerHelp="${cKeybinding}Type your answer, press TAB to replace with the selection (ALT+H for help).${cDefault}"$'\n'
      helpPreview+=$'\n'$'\n'"Use ${cKeybinding}TAB${cDefault} to replace your answer with the current selection."
    fi
    ;;
  "command-options")
    helpPreview="${cTitle}HELP${cDefault}"$'\n'$'\n'"Navigate through the options with the ${cKeybinding}UP${cDefault}/${cKeybinding}DOWN${cDefault} keys."$'\n'$'\n'"Opt-in and out of an option using ${cKeybinding}TAB${cDefault} or ${cKeybinding}SPACE${cDefault}."$'\n'$'\n'"Modify the value of an option by pressing ${cKeybinding}M${cDefault}."$'\n'$'\n'"Validate with ${cKeybinding}ENTER${cDefault}."
    modeOptions+=(
      --multi
      --bind "tab:toggle"
      --bind "space:toggle"
      --bind "m:execute(echo {} | fzf)"
    )
    ;;
  *)
    core::fail "Unknown fzf mode ⌜${mode}⌝."
    ;;
  esac

  helpPreview+="

Cancel with ${cKeybinding}ESC${cDefault} or ${cKeybinding}CTRL+C${cDefault}.

${cTitle}ADDITIONAL KEY BINDINGS${cDefault}

${cKeybinding}ALT+H${cDefault}: Show this help.
${cKeybinding}ALT+/${cDefault}: Rotate through the preview options (this pane).
${cKeybinding}ALT+UP${cDefault}/${cKeybinding}ALT+DOWN${cDefault}: Previous/next query in the history.
${cKeybinding}SHIFT+UP${cDefault}/${cKeybinding}SHIFT+DOWN${cDefault}: Scroll the preview up and down.
"

  if [[ -n "${helpPreview}" ]]; then
    string::wrapText "${helpPreview}" "${previewWidth}"
    helpPreview="${LAST_RETURNED_VALUE}"
    defaultOptions+=(
      "--bind=alt-h:preview(echo -e '${helpPreview}')"
      "--preview-window=right,${previewWidth}"
      --bind 'alt-/:change-preview-window(right,70%|down,40%,border-horizontal|hidden|)'
    )
  fi

  # shellcheck disable=SC2054
  defaultOptions+=(
    --layout=reverse
    --info=right
    --pointer=◆
    --marker=✓
    --cycle
    --tiebreak=begin,index
    --margin=0
    --padding=0
    --delimiter=$'\n'
    --tabstop=3
    --header-first
    --header="${headerHelp}${header}"
    --print-query
  )

  # reset the output file, but only if it already exist
  if [[ -s "${GLOBAL_TEMPORARY_STDOUT_FILE}" ]]; then : >"${GLOBAL_TEMPORARY_STDOUT_FILE}"; fi

  "${fzfExecutable}" "${defaultOptions[@]}" "${modeOptions[@]}" "$@" <<<"${body}" 1>"${GLOBAL_TEMPORARY_STDOUT_FILE}" || true

  local choice
  if [[ -s "${GLOBAL_TEMPORARY_STDOUT_FILE}" ]]; then
    IFS= read -rd '' choice <"${GLOBAL_TEMPORARY_STDOUT_FILE}" || true
  else
    choice=""
  fi

  # if any, append the query to the history file
  if [[ -n "${historyId}" ]]; then
    local query=${choice%%$'\n'*}
    if [[ -n "${query}" ]]; then
      echo "${query}" >>"${historyFile}"
    fi
  fi

  LAST_RETURNED_VALUE="${choice}"
}
