#!/usr/bin/env bash
set -Eeu -o pipefail
# author: github.com/jcaillon
# description: This script can be sourced by commands to provide convenient functions.

# ## system::getOsName
#
# Returns the name of the current OS.
#
# Returns:
#
# - `RETURNED_VALUE`: the name of the current OS: "darwin", "linux" or "windows".
#
# ```bash
# system::getOsName
# local osName="${RETURNED_VALUE}"
# ```
function system::getOsName() {
  local osName
  case "${OSTYPE:-}" in
    darwin*) osName="darwin";;
    linux*) osName="linux";;
    msys*) osName="windows";;
    *) osName="unknown";;
  esac
  RETURNED_VALUE="${osName}"
}

# ## system::getEnvVars
#
# Get the list of all the environment variables.
# In pure bash, no need for env or printenv.
#
# Returns:
#
# - `RETURNED_ARRAY`: An array with the list of all the environment variables.
#
# ```bash
# system::getEnvVars
# for var in "${RETURNED_ARRAY[@]}"; do
#   printf '%s=%s\n' "${var}" "${!var}"
# done
# ```
#
# > This is faster than using mapfile on <(compgen -v).
function system::getEnvVars() {
  RETURNED_ARRAY=()
  for i in $(compgen -v); do
    RETURNED_ARRAY+=("${i}")
  done
}