#!/usr/bin/env bash
set -Eeu -o pipefail
# author: github.com/jcaillon
# description: This script can be sourced by commands to provide convenient functions.

# Returns the name of the current OS.
# Can be one of these values: "darwin", "linux", "windows".
#
# Usage:
#  system::getOsName && local osName="${RETURNED_VALUE}"
function system::getOsName() {
  local osName
  case "${OSTYPE:-}" in
    darwin*) osName="darwin";;
    linux*) osName="linux";;
    msys*) osName="windows";;
    *) osName="unknown";;
  esac
  RETURNED_VALUE="${osName}"
}

# Get the list of all the environment variables.
# In pure bash, no need for env or printenv.
#
# Returns:
#   RETURNED_ARRAY: An array with the list of all the environment variables.
#
# Usage:
#   system::getEnvVars
#   for var in "${RETURNED_ARRAY[@]}"; do
#       printf '%s=%s\n' "${var}" "${!var}"
#   done
function system::getEnvVars() {
  mapfile -t RETURNED_ARRAY < <(compgen -v)
}